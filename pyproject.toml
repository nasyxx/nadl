[project]
name = "nadl"
dynamic = ["version"]
description = "Nasy's Deep Learning Toolkit"
authors = [
    {name = "Nasy", email = "nasyxx+python@gmail.com"},
    {name = "Nasy", email = "nasyxx+dl@gmail.com"},
]
dependencies = [
    "jax>=0.4.20",
    "jaxlib>=0.4.20",
    "numpy>=1.26.2",
    "rich>=13.7.0",
    "jaxtyping>=0.2.22",
    "flax>=0.7.5",
    "optax>=0.1.7",
]
requires-python = ">=3.11,<3.12"
readme = "README.md"
license = {text = "GPLv3"}

[project.optional-dependencies]
doc = [
    "mkdocs-material>=9.4.14",
    "mkdocs>=1.5.3",
    "mike>=2.0.0",
    "mkdocstrings[python]>=0.24.0",
]
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[[tool.pdm.source]]
url = "https://storage.googleapis.com/jax-releases/jax_cuda_releases.html"
name = "jaxlib"
verify_ssl = true
type = "find_links"

[tool.pdm]
version = { source = "file", path = "src/nadl/__init__.py" }

[tool.pdm.dev-dependencies]
dev = [
    "scipy>=1.11.4",
    "scikit-learn>=1.3.2",
]
[tool.mypy]
exclude = [
  "__pypackages__/",
  "./typings",  # for pyright autogen stubs
]

follow_imports_for_stubs = true
follow_imports = "silent"

disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = false

disallow_untyped_calls = false
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false

implicit_optional = true
strict_optional = true


warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = false
warn_return_any = false
warn_unreachable = true

ignore_errors = false

allow_untyped_globals = false
allow_redefinition = false
local_partial_types = false
implicit_reexport = true
strict_equality = true
strict = true

warn_unused_configs = true

[tool.pyright]
pythonVersion = "3.11"
extraPaths = [
  "__pypackages__/3.9/lib",
  "__pypackages__/3.10/lib",
  "__pypackages__/3.11/lib",
  "__pypackages__/3.12/lib",
  "src",
]

exclude = [
    "**/__pycache__",
]

useLibraryCodeForTypes = true


[tool.ruff]

exclude = [ "./typings" ]

fix = false
unfixable = ["F401", "F841", "C417"]
output-format = "grouped"
# show-source = true

select = ["ALL"]
ignore = [
  "ANN101", "C417", "COM812", "D203", "D213", "E401",
  "FBT002", "EM102", "ERA001", "EXE001", "FBT001",
  "I001", "PD", "S101", "SLF001", "TRY003", "UP009",
  "EM101", "T201", "PGH003", "ISC001"
]

indent-width = 2
# show-fixes = true

[tool.ruff.isort]
section-order = ["future", "standard-library", "first-party", "tf", "torch", "jax", "types", "math", "database", "third-party", "config", "local-folder"]

[tool.ruff.isort.sections]
database = ["lucene", "lupyne", "elasticsearch", "sqlite", "shelve"]
tf = ["tensorflow", "keras"]
torch = ["torch", "torchdata", "torchvision", "pytorch_lightning"]
jax = ["jax", "haiku", "flax", "optax", "jraph", "chex", "jaxopt"]
types = ["typing", "types", "jax.typing", "jaxtyping", "numpy.typing", "typing_extensions"]
math = ["numpy", "scipy", "sklearn", "pandas"]
config = ["config", "settings", "cfg", "smile_config", "tyro"]

[tool.ruff.per-file-ignores]
"__init__.py" = [ "D104" ]
"__version__.py" = [ "D100" ]
"sites/*.py" = [ "INP001" ]

[tool.ruff.pylint]
max-args = 10

[tool.ruff.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 15.
max-complexity = 15

[tool.pyink]
pyink_indentation = 2
preview = true

[tool.yapf]
based_on_style = "yapf"
column_limit = 88
allow_multiline_lambdas = true
